# itemAt()
<code class="signature">itemAt( index ) â†’ { item }</code>

This method accepts an index number as its parameter and returns the item from the collection at that position.

The index parameter could be 0, (length of the collection - 1) or any number between zero and length.

Without using the `out()` method, this will return a winkNLP item. It can be further chained with other methods. However, to get the output in a JavaScript data type, you need to follow this method with `out()`.

__Example:__

<pre class="prettyprint source lang-javascript"><code>// Boilerplate code goes here
const text = `#Breaking: Canâ€™t get over this #Oscars selfie from
  @TheEllenShowðŸ¤©! Go check it out:)https://pic.twitter.com/C9U5NOtGap #Share
  your best selfie@r2d2@gmail.comðŸ’¯`;
const doc = nlp.readDoc( text );
const sentence = doc.sentences().itemAt( 1 );
console.log( sentence.out() );
// -> Go check it out:)https://pic.twitter.com/C9U5NOtGap #Share your
//    best selfie@r2d2@gmail.comðŸ’¯

const entity = doc.entities().itemAt( 2 );
console.log( entity.out() );
// -> @TheEllenShow

const token = doc.tokens().itemAt( 3 );
console.log( token.out() );
// -> nâ€™t

customEntities().itemAt()</code></pre>
