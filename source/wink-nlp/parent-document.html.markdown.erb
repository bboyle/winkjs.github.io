# parentDocument()
<code class="signature">.parentDoc() -> { wink-nlp doc }</code>

This method returns the parent `document` of a `sentence`, `entity` or `token` item. The document is returned in a wink-nlp format and can either be chained with other wink-nlp methods or it can be followed by `out()` to get the doc as a string.

<div class="docs-tip docs-tip--green">
  wink-nlp has a lossless tokenizer â€” notice how it has preserved and reproduced all the spaces between "was" and "released" in the following examples.
</div>

__Example:__
<pre class="prettyprint source lang-javascript"><code>// Input text
const text = `The Godfather premiered on March 15, 1972. It was     released on March 24, 1972.`;</code></pre>

## sentence.parentDocument()
<pre class="prettyprint source lang-javascript"><code>// Boilerplate code and input text goes here
const doc = nlp.readDoc( text );
const sentence = doc.sentences().itemAt(1);//->It was released on March 24, 1972.
const parentDoc = sentence.parentDocument().out();
console.log( parentDoc );
// -> The Godfather premiered on March 15, 1972. It was     released
//    on March 24, 1972.</code></pre>

## entity.parentDocument()
<pre class="prettyprint source lang-javascript"><code>// Boilerplate code and input text goes here
const doc = nlp.readDoc( text );
const entity = doc.entities().itemAt( 0 ); // -> March 15, 1972
const parentDoc = entity.parentDocument().out();
console.log( parentDoc );
// -> The Godfather premiered on March 15, 1972. It was     released
//    on March 24, 1972.</code></pre>

## customEntity.parentDocument()
<pre class="prettyprint source lang-javascript"><code></code></pre>

## token.parentDocument()
<pre class="prettyprint source lang-javascript"><code>// Boilerplate code and input text goes here
const doc = nlp.readDoc( text );
const token = doc.tokens().itemAt( 9 ); // -> It
const parentDoc = token.parentDocument().out();
console.log( parentDoc );
// -> The Godfather premiered on March 15, 1972. It was     released
//    on March 24, 1972.</code></pre>
