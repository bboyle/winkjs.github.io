---
title: How to run NLP on a PDF file?
---

# How to run NLP on a PDF file?

On several occasions we need to extract information from PDF documents. The first step is to convert the PDF document into raw text using a PDF parser. In the following example, we use the <a href="https://www.npmjs.com/package/pdf-parse">pdf-parse</a> NPM package to achieve this. Once we have the raw text, it can be passed to winkNLP's <a href="https://winkjs.org/wink-nlp/read-doc.html">readDoc</a> method to process the text. The `doc` object returned by this API can be used to access a variety of information such as <a href="https://winkjs.org/wink-nlp/entities.html">named entities</a>, <a href="https://winkjs.org/wink-nlp/sentences.html">sentences</a> containing <a href="https://winkjs.org/wink-nlp/its-as-helper.html">negation</a>, overall or sentence wise <a href="https://winkjs.org/wink-nlp/its-as-helper.html">sentiment score</a> and many more. We have illustrated extraction of named entities here — also known as <a href="https://winkjs.org/wink-nlp/entities.html">NER</a>.

<pre class="prettyprint source lang-javascript"><code>// Load wink-nlp package & helpers.
const winkNLP = require( 'wink-nlp' );
const its = require( 'wink-nlp/src/its.js' );
const model = require( 'wink-eng-lite-model' );
const nlp = winkNLP( model );

const fs = require('fs');
const pdf = require( 'pdf-parse' );

// Read PDF file.
let dataBuffer = fs.readFileSync( './sample.pdf' );

// Parse & extract entities from the dataBuffer.
pdf( dataBuffer ).then( function( data ) {
  const doc = nlp.readDoc(data.text);
  console.log( doc.entities().out( its.detail ) );
});</code></pre>

The above code will read the PDF file located in the current directory and print all the named entities detected along with their <a href="https://github.com/winkjs/wink-eng-lite-model#named-entity-recognition-ner">type</a> i.e. `DATE`, `TIME`, `MONEY`, `EMAIL` and many more. Each entity is in the form of a Javascript object containing two properties — value and type; for example, `{value: 'March 15, 1972', type: 'DATE' }`.

winkNLP’s <a href="https://github.com/winkjs/wink-eng-lite-model">English language lite model</a> uses a pre-trained state machine to recognize named entities.

This could be useful in extraction of meaningful information from a resume, financial document or a complete book.
