# each()
<code class="signature">each( callback ) â†’ { void }</code>

This method iterates on a collection and executes the provided function once for each item in the collection. The callback function executes once for each item in the collection, starting from first to the last item. The callback function accepts the single item from the collection and its index as parameters.

It works like the JavaScript `forEach()` method.

This method returns nothing. However, you can use the `out()` method in the callback function to get an output in a JavaScript data type. See the examples below:

__Examples:__
<pre class="prettyprint source lang-javascript"><code>// Input text
const text = `#Breaking: Canâ€™t get over this #Oscars selfie from
@TheEllenShowðŸ¤©! Go check it out:)https://pic.twitter.com/C9U5NOtGap #Share your
best selfie@r2d2@gmail.comðŸ’¯`;</code></pre>

## sentences().each()
<code class="signature">doc.sentences().each( callback ) â†’ { void }</code>

<pre class="prettyprint source lang-javascript"><code>// Boilerplate code and input text goes here
const doc = nlp.readDoc( text );
doc.sentences()
   .each( ( sentence, index ) => { // each sentence and its index
              console.log( `${index}:`, sentence.out() );
         } );
// -> 0: #Breaking: Canâ€™t get over this #Oscars selfie from
//       @TheEllenShowðŸ¤©!
//    1: Go check it out:)https://pic.twitter.com/C9U5NOtGap #Share
//       your best selfie@r2d2@gmail.comðŸ’¯</code></pre>

## entities().each()
<code class="signature">doc.entities().each( callback ) â†’ { void }</code>

<pre class="prettyprint source lang-javascript"><code>// Boilerplate code and input text goes here
const doc = nlp.readDoc( text );
doc.entities()
   .each( ( entity, index ) => { // each entity and its index
              console.log( `${index}:`, entity.out() );
        } );
// -> 0: #Breaking
//    1: #Oscars
//    2: @TheEllenShow
//    3: ðŸ¤©
//    4: :)
//    5: https://pic.twitter.com/C9U5NOtGap
//    6: #Share
//    7: r2d2@gmail.com
//    8: ðŸ’¯</code></pre>

## customEntities().each()

## tokens().each()
<code class="signature">doc.tokens().each( callback ) â†’ { void }</code>

<pre class="prettyprint source lang-javascript"><code>// Boilerplate code and input text goes here
const doc = nlp.readDoc( text );
doc.tokens()
   .each( ( token, index ) => { // each token and its index
      console.log( `${index}:`, token.out() );
   } );
// -> 0: #Breaking
//    1: :
//    2: Ca
//    3: nâ€™t
//    .
//    .
//    .
//    23: @
//    24: r2d2@gmail.com
//    25: ðŸ’¯</code></pre>
